apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: amazeeio-openshift-template-node
parameters:
  - name: BRANCH
    description: Which branch this belongs to
    required: true
  - name: SITEGROUP
    description: Which sitegroup this belongs to
    required: true
  - name: ROUTER_URL
    description: URL of the Router
    required: true
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      branch: ${BRANCH}
      sitegroup: ${SITEGROUP}
    name: app
  spec:
    replicas: 1
    selector:
      app: nodejs
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nodejs
          branch: ${BRANCH}
          sitegroup: ${SITEGROUP}
      spec:
        containers:
        - image: ' '
          name: nodejs
          ports:
          - containerPort: 3000
            protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 15
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - nodejs
        from:
          kind: ImageStreamTag
          name: app:latest
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: nodejs
      branch: ${BRANCH}
      sitegroup: ${SITEGROUP}
    name: nodejs
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: nodejs
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: nodejs
      branch: ${BRANCH}
      sitegroup: ${SITEGROUP}
    name: nodejs
  spec:
    host: ${ROUTER_URL}
    port:
      targetPort: 3000-tcp
    to:
      kind: Service
      name: nodejs