apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: amazeeio-openshift-template-node
parameters:
  - name: TAG
    description: Which docker image tag should be deployed
    required: true
  - name: NAME
    description: Name of the objects to create
    required: true
  - name: SHORT_NAME
    description: Shorter name of the objects to create, can be max 24 chars
    required: true
  - name: SITEGROUP
    description: Which sitegroup this belongs to
    required: true
  - name: ROUTER_URL
    description: URL of the Router
    required: true
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME}-home
  spec:
    accessModes:
      - ReadWriteMany
    resources:
      requests:
        storage: 5Gi
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}
      spec:
        containers:
        - image: ' '
          name: jenkins
          env:
          - name: JENKINS_SLAVE_AGENT_PORT
            value: '31243'
          - name: JENKINS_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: secret-environment
                key: JENKINS_ADMIN_PASSWORD
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 3
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 420
            timeoutSeconds: 3
            failureThreshold: 30
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
          - mountPath: /var/jenkins_home
            name: ${NAME}-home
        volumes:
        - name: ${NAME}-home
          persistentVolumeClaim:
            claimName: ${NAME}-home
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: ${SITEGROUP}:${TAG}
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${NAME}
    name: ${SHORT_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${NAME}
    name: ${NAME}-jnlp2
  spec:
    ports:
    - name: jnlp2
      port: 31243
      protocol: TCP
      targetPort: 31243
      nodePort: 31243
    type: LoadBalancer
    externalIPs: []
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    host: ${ROUTER_URL}
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${SHORT_NAME}